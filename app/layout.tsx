import type { Metadata } from "next";
import {
  Geist,
  Geist_Mono,
  Open_Sans,
} from "next/font/google";
import "../styles/index.scss";
import { Header, Footer } from "@/components/index.js";
import { Toaster } from "@/components/ui/sonner";
import { ThemeProvider } from "@/components/theme-provider";
import Provider from "../context";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const openSans = Open_Sans({
  variable: "--font-open_sans",
  subsets: ["latin"],
});

const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || "https://next-modules.vercel.app";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  icons: {
    icon: [
      { rel: "icon", url: "/assets/images/favicon/favicon-32x32.png", sizes: "32x32" },
      { rel: "icon", url: "/assets/images/favicon/favicon-16x16.png", sizes: "16x16" },
    ],
    apple: "/assets/images/favicon/apple-icon.png",
  },
  openGraph: {
    title: "Sheet - Your Website Name",
    description: "This is the sheet page for managing your content.",
    url: `${siteUrl}`,
    siteName: "Your Website Name",
    images: [
      {
        url: `${siteUrl}/assets/images/og-image.png`,
        width: 800,
        height: 600,
        alt: "Your Website Logo",
      },
    ],
    locale: "en_US",
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "Sheet - Your Website Name",
    description: "This is the sheet page for managing your content.",
    images: [
      {
        url: `${siteUrl}/assets/images/twitter-image.jpg`,
        width: 800,
        height: 600,
        alt: "Your Website Logo",
      },
    ],
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${openSans.variable}  ${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Provider>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
            <Header />
            {children}
            <Footer />
            <Toaster />
          </ThemeProvider>
        </Provider>
      </body>
    </html>
  );
}
