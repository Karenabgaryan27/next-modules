import type { Metadata } from "next";
import {
  Geist,
  Geist_Mono,
  // Poppins,
  Open_Sans,
  Roboto,
} from "next/font/google";
import "../styles/index.scss";
import { Header, ThemeProvider } from "@/components/index.js";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// const poppins = Poppins({
//   variable: "--font-poppins",
//   subsets: ["latin"],
//   weight: ["100", "300", "400", "500", "700", "900"],
// });

const openSans = Open_Sans({
  variable: "--font-open_sans",
  subsets: ["latin"],
});

const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
  weight: ["100", "300", "400", "500", "700", "900"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  openGraph: {
    title: "Sheet - Your Website Name",
    description: "This is the sheet page for managing your content.",
    url: "https://yourwebsite.com/sheet",
    siteName: "Your Website Name",
    images: [
      {
        url: "https://yourwebsite.com/path-to-logo.png",
        width: 800,
        height: 600,
        alt: "Your Website Logo",
      },
    ],
    locale: "en_US",
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "Sheet - Your Website Name",
    description: "This is the sheet page for managing your content.",
    images: ["https://yourwebsite.com/path-to-logo.png"],
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${openSans.variable} ${roboto.variable}  ${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
          <Header />
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}
